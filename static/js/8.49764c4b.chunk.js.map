{"version":3,"sources":["containers/SinglePost/SinglePost.jsx"],"names":["SinglePostContainer","useState","singlePost","setSinglePost","spinner","setSpinner","posts","useSelector","state","api","recentPosts","slice","slug","useParams","dispatch","useDispatch","useEffect","setTimeout","fetchSinglePost","then","data","catch","error","console","log","fetchBlogData","postSort","sort","value1","value2","Date","publishedAt","getTime","action","setPosts","className","post"],"mappings":"wKA4DeA,UArDa,WAC3B,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,IAAIH,SAEzCI,EAAcJ,EAAQA,EAAMK,MAAM,EAAG,GAAK,KAExCC,EAASC,cAATD,KACFE,EAAWC,cAiCjB,OA/BAC,qBAAU,WACTC,YAAW,WACVZ,GAAW,KACT,QACD,IAEHW,qBAAU,WACTE,YAAgBN,GACdO,MAAK,SAACC,GACNjB,EAAciB,EAAK,OAEnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,UAAWF,QACxC,CAACV,IAEJI,qBAAU,WACJV,GACJmB,cACEN,MAAK,SAACb,GACN,IAAIoB,EACJA,EAAWpB,EAAMK,QAAQgB,MAAK,SAACC,EAAQC,GAGtC,OAFmB,IAAIC,KAAKF,EAAOG,aAAaC,UAC7B,IAAIF,KAAKD,EAAOE,aAAaC,UACf,GAAK,KAEvC,IAAMC,EAASC,YAASR,GACxBZ,EAASmB,MAETZ,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,QAEvC,CAACR,EAAUR,IAGb,qBAAK6B,UAAU,GAAf,SACE/B,EACA,cAAC,IAAD,IAEA,cAAC,IAAD,CAAYgC,KAAMlC,EAAYQ,YAAaA","file":"static/js/8.49764c4b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchBlogData, fetchSinglePost } from \"../../api\";\r\nimport { setPosts } from \"../../app/slice/fetchApi\";\r\nimport { SinglePost, SpinnerBook } from \"../../components\";\r\n\r\nconst SinglePostContainer = () => {\r\n\tconst [singlePost, setSinglePost] = useState(null);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\r\n\tconst posts = useSelector((state) => state.api.posts);\r\n\r\n\tconst recentPosts = posts ? posts.slice(0, 3) : null;\r\n\r\n\tconst { slug } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSpinner(false);\r\n\t\t}, 2300);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSinglePost(slug)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetSinglePost(data[0]);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(\"error: \", error));\r\n\t}, [slug]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!posts) {\r\n\t\t\tfetchBlogData()\r\n\t\t\t\t.then((posts) => {\r\n\t\t\t\t\tlet postSort = [];\r\n\t\t\t\t\tpostSort = posts.slice().sort((value1, value2) => {\r\n\t\t\t\t\t\tconst dateValue1 = new Date(value1.publishedAt).getTime();\r\n\t\t\t\t\t\tconst dateValue2 = new Date(value2.publishedAt).getTime();\r\n\t\t\t\t\t\treturn dateValue1 < dateValue2 ? 1 : -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst action = setPosts(postSort);\r\n\t\t\t\t\tdispatch(action);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(\"error\", error));\r\n\t\t}\r\n\t}, [dispatch, posts]);\r\n\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t{spinner ? (\r\n\t\t\t\t<SpinnerBook />\r\n\t\t\t) : (\r\n\t\t\t\t<SinglePost post={singlePost} recentPosts={recentPosts} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SinglePostContainer;"],"sourceRoot":""}